"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Textarea } from "@/components/ui/textarea"

export default function MedicalBillingComponent() {
  const [services, setServices] = useState([
    { id: 1, name: "General Consultation", cost: 150, icd10: "Z00.00" },
    { id: 2, name: "Blood Test", cost: 75, icd10: "Z01.7" },
  ])
  const [newService, setNewService] = useState({ name: "", cost: "", icd10: "" })
  const [patientInfo, setPatientInfo] = useState({ name: "", email: "", address: "" })
  const [notes, setNotes] = useState("")

  const total = services.reduce((sum, service) => sum + service.cost, 0)

  const addService = () => {
    if (newService.name && newService.cost && newService.icd10) {
      setServices([...services, { id: services.length + 1, ...newService, cost: parseFloat(newService.cost) }])
      setNewService({ name: "", cost: "", icd10: "" })
    }
  }

  const sendInvoice = () => {
    // In a real application, this would send the invoice to the patient
    alert(`Invoice sent to ${patientInfo.name} at ${patientInfo.email}`)
  }

  return (
    <Card className="w-full max-w-4xl mx-auto bg-white shadow-lg rounded-lg overflow-hidden">
      <CardHeader className="bg-blue-500 text-white">
        <CardTitle className="text-2xl">Patient Invoice</CardTitle>
      </CardHeader>
      <CardContent className="p-6">
        <div className="space-y-6">
          <div className="grid grid-cols-2 gap-4">
            <div>
              <Label htmlFor="patient-name">Patient Name</Label>
              <Input
                id="patient-name"
                value={patientInfo.name}
                onChange={(e) => setPatientInfo({ ...patientInfo, name: e.target.value })}
                placeholder="Enter patient name"
              />
            </div>
            <div>
              <Label htmlFor="patient-email">Patient Email</Label>
              <Input
                id="patient-email"
                type="email"
                value={patientInfo.email}
                onChange={(e) => setPatientInfo({ ...patientInfo, email: e.target.value })}
                placeholder="Enter patient email"
              />
            </div>
          </div>
          <div>
            <Label htmlFor="patient-address">Patient Address</Label>
            <Textarea
              id="patient-address"
              value={patientInfo.address}
              onChange={(e) => setPatientInfo({ ...patientInfo, address: e.target.value })}
              placeholder="Enter patient address"
            />
          </div>
          <div>
            <div className="flex justify-between items-center mb-2">
              <h3 className="text-lg font-semibold text-gray-800">Medical Services</h3>
              <Dialog>
                <DialogTrigger asChild>
                  <Button variant="outline">Add Service</Button>
                </DialogTrigger>
                <DialogContent className="sm:max-w-[425px]">
                  <DialogHeader>
                    <DialogTitle>Add New Service</DialogTitle>
                    <DialogDescription>
                      Enter the details of the medical service provided.
                    </DialogDescription>
                  </DialogHeader>
                  <div className="grid gap-4 py-4">
                    <div className="grid grid-cols-4 items-center gap-4">
                      <Label htmlFor="name" className="text-right">
                        Service
                      </Label>
                      <Input
                        id="name"
                        value={newService.name}
                        onChange={(e) => setNewService({ ...newService, name: e.target.value })}
                        className="col-span-3"
                      />
                    </div>
                    <div className="grid grid-cols-4 items-center gap-4">
                      <Label htmlFor="cost" className="text-right">
                        Cost ($)
                      </Label>
                      <Input
                        id="cost"
                        type="number"
                        value={newService.cost}
                        onChange={(e) => setNewService({ ...newService, cost: e.target.value })}
                        className="col-span-3"
                      />
                    </div>
                    <div className="grid grid-cols-4 items-center gap-4">
                      <Label htmlFor="icd10" className="text-right">
                        ICD-10
                      </Label>
                      <Input
                        id="icd10"
                        value={newService.icd10}
                        onChange={(e) => setNewService({ ...newService, icd10: e.target.value })}
                        className="col-span-3"
                      />
                    </div>
                  </div>
                  <DialogFooter>
                    <Button type="submit" onClick={addService}>Add Service</Button>
                  </DialogFooter>
                </DialogContent>
              </Dialog>
            </div>
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Service</TableHead>
                  <TableHead>ICD-10</TableHead>
                  <TableHead className="text-right">Cost</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {services.map((service) => (
                  <TableRow key={service.id}>
                    <TableCell>{service.name}</TableCell>
                    <TableCell>{service.icd10}</TableCell>
                    <TableCell className="text-right">${service.cost.toFixed(2)}</TableCell>
                  </TableRow>
                ))}
                <TableRow>
                  <TableCell colSpan={2} className="font-bold">Total</TableCell>
                  <TableCell className="text-right font-bold">${total.toFixed(2)}</TableCell>
                </TableRow>
              </TableBody>
            </Table>
          </div>
          <div>
            <Label htmlFor="notes">Additional Notes</Label>
            <Textarea
              id="notes"
              value={notes}
              onChange={(e) => setNotes(e.target.value)}
              placeholder="Enter any additional notes or instructions for the patient"
            />
          </div>
        </div>
      </CardContent>
      <CardFooter className="bg-gray-50 flex justify-between">
        <Button variant="outline" onClick={() => alert("Invoice saved as draft")}>Save Draft</Button>
        <Button className="bg-blue-500 hover:bg-blue-600 text-white" onClick={sendInvoice}>
          Send Invoice
        </Button>
      </CardFooter>
    </Card>
  )
}